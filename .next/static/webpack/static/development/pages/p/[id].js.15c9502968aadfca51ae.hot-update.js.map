{"version":3,"file":"static/webpack/static\\development\\pages\\p\\[id].js.15c9502968aadfca51ae.hot-update.js","sources":["webpack:///./pages/p/.js"],"sourcesContent":["// import { useRouter } from 'next/router';\r\n// import Layout from '../../components/MyLayout';\r\n\r\n// export default function Post() {\r\n//   const router = useRouter();\r\n\r\n//   return (\r\n//     <Layout>\r\n//       <h1>{router.query.id}</h1>\r\n//       <p>This is the blog post content.</p>\r\n//     </Layout>\r\n//   );\r\n// }\r\n\r\n// Having brackets ([]) in the page name makes it a dynamic route. Currently, you can not make part of a page name dynamic, only the full name. For example, /pages/p/[id].js is supported but /pages/p/post-[id].js is not currently.\r\n// When creating the dynamic route we added id between the brackets ([]). This is the name of the query param received by the page, so for /p/hello-nextjs the query object will have { id: 'hello-nextjs'}, and we can access it with useRouter().\r\n\r\n\r\nimport Layout from '../../components/MyLayout';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst Post = props => (\r\n  <Layout>\r\n    <h1>{props.show.name}</h1>\r\n    <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\r\n    <img src={props.show.image.medium} />\r\n  </Layout>\r\n);\r\n\r\nPost.getInitialProps = async function(context) {\r\n  const { id } = context.query;\r\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\r\n  const show = await res.json();\r\n\r\n  console.log(`Fetched show: ${show.name}`);\r\n\r\n  return { show };\r\n};\r\n\r\nexport default Post;\r\n\r\n//CONTEXT\r\n// The first argument of the function is the context object. It has a query object that we can use to fetch information.\r\n// In our example, we picked the show ID from query and used it to fetch the show data from the TVMaze API.\r\n\r\n// When we click on a link wrapped with the Next.js <Link> component, the page transition takes place in the browser, without making a request to the server."],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAEA;AALA;AAOA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;AAGA;AACA;AAEA;;;;A","sourceRoot":""}